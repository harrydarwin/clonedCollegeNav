[{"C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\index.js":"1","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\reportWebVitals.js":"2","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\App.js":"3","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\SearchResults.js":"4","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Firebase.js":"5","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Header.js":"6","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Footer.js":"7","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Favourites.js":"8","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\AddSchool.js":"9","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Favourite.js":"10"},{"size":552,"mtime":1611079343294,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1611072298737,"results":"13","hashOfConfig":"12"},{"size":8540,"mtime":1611165472665,"results":"14","hashOfConfig":"12"},{"size":6572,"mtime":1611166871506,"results":"15","hashOfConfig":"12"},{"size":502,"mtime":1611072298501,"results":"16","hashOfConfig":"12"},{"size":4978,"mtime":1611072298503,"results":"17","hashOfConfig":"12"},{"size":687,"mtime":1611072298503,"results":"18","hashOfConfig":"12"},{"size":1690,"mtime":1611072298501,"results":"19","hashOfConfig":"12"},{"size":6390,"mtime":1611072298497,"results":"20","hashOfConfig":"12"},{"size":2748,"mtime":1611072298500,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"1k89b3e",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\index.js",["46"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["47","48"],"C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\reportWebVitals.js",[],"C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\App.js",["49","50","51","52"],"import React, { Component } from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n// adding react scroll library\r\nimport { animateScroll as scroll, scroller } from \"react-scroll\";\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\nimport firebase from './Firebase.js';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport Header from './Header.js';\r\nimport SearchResults from './SearchResults.js';\r\nimport './App.css';\r\nimport AddSchool from './AddSchool';\r\nimport Favourites from './Favourites.js';\r\nimport Footer from './Footer.js';\r\n\r\n\r\nlet city = \"\";\r\nlet country = \"\";\r\nlet mapSearches = [];\r\nlet longLats = [];\r\n\r\nconst testArray = ['1234 Yonge Street, Toronto, Ontario M4T 1W2, Canada', '424 Yonge Street, Suite 200, Toronto ON M5B 2H4, Canada', '487 Adelaide St W, Unit 100 (Portland), Toronto ON, Canada'];\r\nmapboxgl.accessToken = `pk.eyJ1IjoiaGFycnlndWxvaWVuIiwiYSI6ImNrazQ2bmFuYTE2c2MydnBiZW5mcDVnaHYifQ.QPjai4qdHOKRY8qHYt1QVw`;\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      schoolResults: [],\r\n      favourites: [],\r\n      radius: '',\r\n      schoolTypeId: '',\r\n      cityInput: '',\r\n      countryInput: '',\r\n      formattedAddress: [],\r\n      newSchool: [],\r\n      favouriteLength: '',\r\n      isActive: false,\r\n      directMeHome: false,\r\n      mapLocations: [],\r\n      longLatLocations: [],\r\n      locationCoordinates: [],\r\n    }\r\n  }\r\n\r\n// scroll to element function\r\n scrollTo() {\r\n    scroller.scrollTo('scroll-to-element', {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: 'easeInOutQuart'\r\n    })\r\n  }\r\n\r\n  \r\n\r\n getData = () => {\r\n  //Grab data from API\r\n   this.apiCall();\r\n  //Grab data from firebase\r\n   this.fireBaseCall();\r\n  //  scrolls to search results when API call is made\r\n  this.scrollTo();\r\n  \r\n  // testArray.forEach(school => this.mapData(school));\r\n  this.mapData(`${this.state.cityInput} ${this.state.countryInput}`)\r\n   \r\n }\r\n\r\n\r\n\r\n\r\n handleSubmit = (e) => {\r\n   e.preventDefault();\r\n   this.getData();\r\n   this.setState({\r\n     directMeHome: true\r\n   })\r\n }\r\n\r\n handleSchoolType = (e) => {\r\n   this.setState({\r\n     schoolTypeId: e.target.value\r\n   })\r\n }\r\n\r\n handleRadius = (e) => {\r\n   this.setState({\r\n     radius: e.target.value\r\n   })\r\n }\r\n\r\n handleCityInput = (e) => {\r\n  this.setState({\r\n    cityInput: e.target.value\r\n  })\r\n }\r\n\r\n handleCountryInput = (e) => {\r\n   this.setState({\r\n     countryInput: e.target.value\r\n   })\r\n }\r\n\r\n  fireBaseCall() {\r\n    const dbRef = firebase.database().ref();\r\n    dbRef.on('value', (data) => {\r\n      const firebaseDataObj = data.val();\r\n      const newSchoolObject = firebaseDataObj.NewSchools;\r\n\r\n      // create and store usable, formatted firebase data \r\n      let newSchoolArray = formatFirebaseData(newSchoolObject);\r\n      // convert and store API school type id (long alphanumeric string) to english school type for usable comparison\r\n      let userSchoolType = this.convertCategoryIdToName();\r\n\r\n      // filter firebase formatted school data by comparing school type with usr chosen school type and return results in an array\r\n      const filteredNewSchoolArray = this.compareUserInputAndCreateResultsArray(newSchoolArray, userSchoolType);\r\n      filteredNewSchoolArray.forEach(school => {\r\n        const address = school.schoolAddress.join();\r\n        mapSearches.push(address);\r\n      })\r\n      console.log({mapSearches});\r\n      //store results in state\r\n      this.setState({\r\n        newSchool: filteredNewSchoolArray\r\n      });\r\n    });\r\n    // store in variables to pass as props\r\n    city = this.state.cityInput;\r\n    country = this.state.countryInput;\r\n  }\r\n\r\n  mapData(query) {\r\n    axios({\r\n      method: 'GET',\r\n      responseType: 'json',\r\n      url: `https://api.mapbox.com/geocoding/v5/mapbox.places/${query}.json?`,\r\n      params: {\r\n        access_token: mapboxgl.accessToken,\r\n        \r\n      }\r\n    }).then((res) => {\r\n    const possibleLocations = res.data.features;\r\n\r\n    const ourLocation = possibleLocations[0].geometry.coordinates;\r\n    this.setState({\r\n      locationCoordinates: ourLocation\r\n    })\r\n   console.log({ourLocation})\r\n  });\r\n  }\r\n\r\n  compareUserInputAndCreateResultsArray(newSchoolArray, userSchoolType) {\r\n    return newSchoolArray.filter((object => {\r\n\r\n      //  making inputs and comparison case sensitive\r\n      const addedSchoolCity = object.schoolAddress[1].toLowerCase();\r\n      const addedSchoolCountry = object.schoolAddress[2].toLowerCase();\r\n      \r\n      return ((object.schoolType === userSchoolType) && addedSchoolCity.includes(this.state.cityInput.toLowerCase()) && addedSchoolCountry.includes(this.state.countryInput.toLowerCase())) || ((object.schoolType === userSchoolType) && addedSchoolCity.includes(this.state.cityInput.toLowerCase()) && addedSchoolCity.includes(this.state.cityInput.toLowerCase()))\r\n    })\r\n    );\r\n  }\r\n\r\n  convertCategoryIdToName() {\r\n    let userSchoolType = '';\r\n    if (this.state.schoolTypeId === '4bf58dd8d48988d1ae941735') {\r\n      userSchoolType = 'University';\r\n    } else if (this.state.schoolTypeId === '4bf58dd8d48988d1a2941735') {\r\n      userSchoolType = 'Community College';\r\n    } else if (this.state.schoolTypeId === '4bf58dd8d48988d1ad941735') {\r\n      userSchoolType = 'Trade School';\r\n    }\r\n    return userSchoolType;\r\n  }\r\n\r\n  // API call function which draws data from the API and handles errors if data is not found \r\n  apiCall() {\r\n    axios({\r\n      method: 'GET',\r\n      responseType: 'json',\r\n      url: 'https://api.foursquare.com/v2/venues/search',\r\n      params: {\r\n        client_id: 'SMUUEFGVRENHIW3EQX5ICCFCTNQPPIWVXP21E2BQVRH421OF',\r\n        client_secret: 'EVNPHQ3EYKNQKZMOAKRVUTT0KDHXXGNUWUCY0LFZTVRE2BAF',\r\n        near: this.state.cityInput + \" \" + this.state.countryInput,\r\n        categoryId: this.state.schoolTypeId,\r\n        radius: this.state.radius,\r\n        v: 20201205\r\n      }\r\n    }).then((res) => {\r\n      const dataArray = res.data.response.venues;\r\n\r\n      const filteredArray = ourCategoryFilter(dataArray);\r\n      longLats = [];\r\n      console.log({filteredArray})\r\n      filteredArray.forEach(school => {\r\n        longLats.push(school)\r\n      })\r\n\r\n      console.log({longLats});\r\n\r\n      this.setState({\r\n        schoolResults: filteredArray,\r\n        isActive: true\r\n      });\r\n\r\n    }).catch((err) => {\r\n      this.setState({\r\n        isActive: false\r\n      });\r\n      Swal.fire({\r\n        title: \"No schools found\",\r\n        text: \"Please Try Another City and Province/Country\",\r\n        icon: \"error\",\r\n        confirmButtonText: \"Ok\",\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return(\r\n      <Router>\r\n        \r\n        <Header\r\n        schoolHandler={this.handleSchoolType}\r\n        radiusHandler={this.handleRadius}\r\n        handleCityInput={this.handleCityInput}\r\n        handleCountryInput={this.handleCountryInput}\r\n        submitHandler={this.handleSubmit}\r\n        />\r\n        <div className=\"wrapper\">\r\n        {this.state.isActive \r\n            ? <Route exact path=\"/searchResults\" render={() => {\r\n          return (\r\n            <>\r\n            <SearchResults \r\n              schoolResults = {this.state.schoolResults}\r\n              schoolsAdded = {this.state.newSchool}\r\n              userCityInput = {city}\r\n              userCountryInput = {country}\r\n              location = {this.state.locationCoordinates}\r\n              mapPoints = {longLats}\r\n              />\r\n            </>\r\n          )\r\n        }\r\n         }/>  : null \r\n      } \r\n\r\n        <Route path=\"/addSchool\" component={AddSchool} /> \r\n        <Route path=\"/favourites\" component={Favourites} /> \r\n        </div>\r\n        <Footer />\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// Formats user input schools from firebase into identical objects with ID's and pushes formatted objects to new array\r\nfunction formatFirebaseData(newSchoolObject) {\r\n  let newSchoolArray = [];\r\n  let userNewSchool;\r\n\r\n  for (let schoolId in newSchoolObject) {\r\n    userNewSchool = newSchoolObject[schoolId];\r\n    userNewSchool.id = schoolId;\r\n\r\n    newSchoolArray.push(userNewSchool);\r\n  }\r\n  return newSchoolArray;\r\n}\r\n\r\n// Function to filter our data by category type matching the user selection - ie: university, college or trade school \r\nfunction ourCategoryFilter(dataArray) {\r\n  return dataArray.filter((object => {\r\n    return object.name.includes(\"University\") || object.categories[0].name === \"Community College\" || object.categories[0].name === \"Trade School\" && object.location.formattedAddress.length > 2;\r\n  })\r\n  );\r\n}\r\n\r\n","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\SearchResults.js",["53","54","55","56"],"C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Firebase.js",[],"C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Header.js",[],"C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Footer.js",["57"],"const { Fragment } = require(\"react\");\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        <p>Juno College 2020 Created by <span><a href=\"https://clarkemacarthur.com/\">Clarke</a>, <a href=\"http://erzhena.ca/\">Erzhena</a>, <a href=\"https://www.harrydarwin.com/\">Harry</a> and <a href=\"https://kylekodes.com/\">Kyle</a> &#169;</span></p>\r\n\r\n        <p><span>Photo by <a href=\"https://unsplash.com/@iemyoung?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Emily Karakis</a> on <a href=\"https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\">Unsplash</a></span></p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Favourites.js",[],"C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\AddSchool.js",[],"C:\\Users\\harry\\OneDrive\\Documents\\sites\\testingGrounds\\project6CollegeNavigator\\src\\Favourite.js",[],{"ruleId":"58","severity":1,"message":"59","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":16},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":4,"column":27,"nodeType":"60","messageId":"61","endLine":4,"endColumn":33},{"ruleId":"58","severity":1,"message":"67","line":22,"column":7,"nodeType":"60","messageId":"61","endLine":22,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":286,"column":100,"nodeType":"70","messageId":"71","endLine":286,"endColumn":102},{"ruleId":"68","severity":1,"message":"69","line":286,"column":148,"nodeType":"70","messageId":"71","endLine":286,"endColumn":150},{"ruleId":"58","severity":1,"message":"72","line":43,"column":17,"nodeType":"60","messageId":"61","endLine":43,"endColumn":23},{"ruleId":"58","severity":1,"message":"73","line":48,"column":17,"nodeType":"60","messageId":"61","endLine":48,"endColumn":22},{"ruleId":"58","severity":1,"message":"72","line":74,"column":17,"nodeType":"60","messageId":"61","endLine":74,"endColumn":23},{"ruleId":"58","severity":1,"message":"73","line":79,"column":17,"nodeType":"60","messageId":"61","endLine":79,"endColumn":22},{"ruleId":"58","severity":1,"message":"74","line":1,"column":9,"nodeType":"60","messageId":"61","endLine":1,"endColumn":17},"no-unused-vars","'mapboxgl' is defined but never used.","Identifier","unusedVar","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'scroll' is defined but never used.","'testArray' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'marker' is assigned a value but never used.","'popup' is assigned a value but never used.","'Fragment' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]